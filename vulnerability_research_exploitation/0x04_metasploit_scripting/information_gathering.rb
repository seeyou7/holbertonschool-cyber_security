require 'msf/core'

class MetasploitModule < Msf::Post

  def initialize(info = {})
    super(update_info(info,
      'Name'        => 'Information Gathering Script',
      'Description' => %q{
        This module gathers information from a target system, such as OS version, user accounts, network configuration, and running processes.
      },
      'Author'      => [ 'idoudi2020' ],
      'License'     => MSF_LICENSE,
      'Platform'    => [ 'win' ],
      'SessionTypes' => [ 'meterpreter' ]
    ))

    register_options([
      Opt::SESSION()
    ])
  end

  def run
    session_id = datastore['SESSION']
    print_status("Gathering information from session #{session_id}")

    gather_system_info
    gather_user_info
    gather_network_info
    gather_running_processes
  end

  def gather_system_info
    print_status("Gathering system information...")
    sysinfo = session.sys.config.sysinfo
    print_good("OS: #{sysinfo['OS']}")
    print_good("Computer: #{sysinfo['Computer']}")
  end

  def gather_user_info
    print_status("Gathering user information...")
    user = session.sys.config.getuid
    print_good("User: #{user}")
  end

  def gather_network_info
    print_status("Gathering network information...")
    interfaces = session.net.config.interfaces
    interfaces.each do |interface|
      print_good("Interface: #{interface.name}, IP: #{interface.ip}, Netmask: #{interface.netmask}, Broadcast: #{interface.bcast}")
    end
  end

  def gather_running_processes
    print_status("Gathering running processes...")
    processes = session.sys.process.processes
    processes.each do |process|
      print_good("Process #{process['pid']} - #{process['name']}")
    end
  end
end
